##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [4.5.0-RC5] date: [Fri Jun 06 10:48:25 CEST 2025]
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#	2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target
######################################
TARGET = orcos


######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization
#OPT = -Og
OPT = -O0


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

######################################
# source
######################################
# Library name
LIB_NAME = liborcos.a
# Library sources
LIB_SOURCES = \
Core/Src/calc.c \
Core/Src/fonts.c \
Core/Src/func.c \
Core/Src/io.c \
Core/Src/sharp.c

# C sources
C_SOURCES =  \
Core/Src/main.c \
Core/Src/stm32u3xx_it.c \
Core/Src/stm32u3xx_hal_msp.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_adc.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_adc_ex.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_dma.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_dma_ex.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_rcc.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_rcc_ex.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_cortex.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_flash.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_flash_ex.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_gpio.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_exti.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_pwr.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_pwr_ex.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_gtzc.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_icache.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_lptim.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_spi.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_spi_ex.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_tim.c \
Drivers/STM32U3xx_HAL_Driver/Src/stm32u3xx_hal_tim_ex.c \
Core/Src/system_stm32u3xx.c \
Core/Src/sysmem.c \
Core/Src/syscalls.c \
RTT/SEGGER_RTT.c \
RTT/SEGGER_RTT_printf.c

# ASM sources
ASM_SOURCES =  \
startup_stm32u385xx.s

# ASM sources
ASMM_SOURCES = 


#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S
 
#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m33

# fpu
FPU = -mfpu=fpv4-sp-d16

# float-abi
FLOAT-ABI = -mfloat-abi=hard

# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
-DUSE_HAL_DRIVER \
-DSTM32U385xx


# AS includes
AS_INCLUDES = 

# C includes
C_INCLUDES =  \
-ICore/Inc \
-IDrivers/STM32U3xx_HAL_Driver/Inc \
-IDrivers/STM32U3xx_HAL_Driver/Inc/Legacy \
-IDrivers/CMSIS/Device/ST/STM32U3xx/Include \
-IDrivers/CMSIS/Include \
-IRTT \


# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS += $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
LDSCRIPT = STM32U385xx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys 
LIBDIR = 
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
LIB_OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(LIB_SOURCES:.c=.o)))

OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(filter-out $(LIB_SOURCES),$(C_SOURCES:.c=.o))))
vpath %.c $(sort $(dir $(filter-out $(LIB_SOURCES),$(C_SOURCES))))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASMM_SOURCES:.S=.o)))
vpath %.S $(sort $(dir $(ASMM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR) 
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@
$(BUILD_DIR)/%.o: %.S Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
$(BUILD_DIR)/$(LIB_NAME): $(LIB_OBJECTS)
	$(PREFIX)ar rcs $@ $^

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) $(BUILD_DIR)/$(LIB_NAME) Makefile
	$(CC) $(OBJECTS) -L$(BUILD_DIR) -lorcos $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@
	
$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@	
	
$(BUILD_DIR):
	mkdir $@		

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)
	-rm -f $(LIB_NAME)
  
#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

.PHONY: probe-rs
probe-rs:
	(cd probe-rs && cargo build --release)

flash: build/$(TARGET).elf probe-rs
	probe-rs/target/release/probe-rs run --chip STM32U385RGTx build/$(TARGET).elf

# *** EOF ***
